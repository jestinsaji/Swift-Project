theme: jekyll-theme-cayman

multi select with search
HTML
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
  
import { AppComponent } from './app.component';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
  
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatSelectModule } from '@angular/material/select';
import { MatButtonModule } from '@angular/material/button';
import { MatFormFieldModule } from '@angular/material/form-field';
import { NgxMatSelectSearchModule } from 'ngx-mat-select-search';
  
@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    BrowserAnimationsModule,
    FormsModule,
    ReactiveFormsModule,
    MatSelectModule,
    MatButtonModule,
    MatFormFieldModule,
    NgxMatSelectSearchModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }

TS
<h1>Angular material multi select dropdown with search Example - ItSolutionStuff.com</h1>
        
<p>
  <mat-form-field>
    <mat-select [formControl]="websiteMultiCtrl" placeholder="Website" [multiple]="true"  #multiSelect>
      <mat-option>
        <ngx-mat-select-search [formControl]="websiteMultiFilterCtrl"></ngx-mat-select-search>
      </mat-option>
  
      <mat-option *ngFor="let website of filteredWebsitesMulti | async" [value]="website">
        {{website.name}}
      </mat-option>
    </mat-select>
  </mat-form-field>
</p>
<ul *ngFor="let website of websiteMultiCtrl?.value">
  <li>{{website.name}}</li>
</ul>

update ts
import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';
import { FormControl } from '@angular/forms';
import { MatSelect } from '@angular/material/select';
import { ReplaySubject, Subject } from 'rxjs';
import { take, takeUntil } from 'rxjs/operators';
  
interface Website {
  id: string;
  name: string;
}
  
@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit, AfterViewInit, OnDestroy {
  title = 'app-material3';
    
  protected websites: Website[] = [
    {id: '1', name: 'ItSolutionStuff.com'},
    {id: '2', name: 'HDTuto.com'},
    {id: '3', name: 'Nicesnippets.com'},
    {id: '4', name: 'Google.com'},
    {id: '5', name: 'laravel.com'},
    {id: '6', name: 'npmjs.com'},
    {id: '7', name: 'Google2.com'},
  ]; 
  
  public websiteMultiCtrl: FormControl = new FormControl();
  public websiteMultiFilterCtrl: FormControl = new FormControl();
  public filteredWebsitesMulti: ReplaySubject = new ReplaySubject(1);

  
  @ViewChild('multiSelect', { static: true }) multiSelect: MatSelect;
  
  protected _onDestroy = new Subject();

  constructor() { }
  
  /**
   * Write code on Method
   *
   * method logical code
   */
  ngOnInit() {
    this.websiteMultiCtrl.setValue(this.websites[1]);
    this.filteredWebsitesMulti.next(this.websites.slice());
  
    this.websiteMultiFilterCtrl.valueChanges
      .pipe(takeUntil(this._onDestroy))
      .subscribe(() => {
        this.filterWebsiteMulti();
      });
  }
  
  /**
   * Write code on Method
   *
   * method logical code
   */
  ngAfterViewInit() {
    this.setInitialValue();
  }
 
  /**
   * Write code on Method
   *
   * method logical code
   */
  ngOnDestroy() {
    this._onDestroy.next();
    this._onDestroy.complete();
  }
  
  /**
   * Write code on Method
   *
   * method logical code
   */
  protected setInitialValue() {
    this.filteredWebsitesMulti
      .pipe(take(1), takeUntil(this._onDestroy))
      .subscribe(() => {
          this.multiSelect.compareWith = (a: Website, b: Website) => a && b && a.id === b.id;
      });
  }
  
  /**
   * Write code on Method
   *
   * method logical code
   */
  protected filterWebsiteMulti() {
    if (!this.websites) {
      return;
    }
  
    let search = this.websiteMultiFilterCtrl.value;
    if (!search) {
      this.filteredWebsitesMulti.next(this.websites.slice());
      return;
    } else {
      search = search.toLowerCase();
    }
  
    this.filteredWebsitesMulti.next(
      this.websites.filter(bank => bank.name.toLowerCase().indexOf(search) > -1)
    );
  }
}
